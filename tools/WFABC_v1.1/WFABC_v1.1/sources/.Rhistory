hist(wfabc_estimates, breaks=500)
hist(lls_estimates, breaks=500)
hist(clear_estimates, breaks=500)
save.image("~/sweden/master_thesis/stelkens/week2/plots_real_data/ciarian/NaCl/Rdata.RData")
slattice_estimation <- function(your_dataset, your_gen, your_ne, your_gen_time){
slattice_estimation <- function(your_row){
your_row <- as.matrix(your_row)
df_slattice <- data.frame(N = rep(0, times=your_gen[length(your_gen)]+1), N.A = rep(0, times=your_gen[length(your_gen)]+1))
df_slattice[seq(1, nrow(df_slattice), 125), ] = data.frame(N = rep(your_ne, times=your_gen_time+1), N.A = rep(your_ne, times=your_gen_time+1))
df_slattice[seq(1, nrow(df_slattice), 125), ][2] = df_slattice[seq(1, nrow(df_slattice), 125), ][2]*your_row
df_slattice$N.A <- as.integer(df_slattice$N.A)
estimate <- estimate.s(df_slattice, your_ne, method="Hard EM", verbose = FALSE)
print(your_row)
return(estimate)
}
your_dataset <- as.data.frame(your_dataset)
slattice_estimates <- by(your_dataset, 1:nrow(your_dataset), function(row) slattice_estimation(row))
s_distr_slattice <- subListExtract(slattice_estimates, "s", simplify = FALSE, keep.names = TRUE)
s_distr_slattice <- unlist(s_distr_slattice, use.names=FALSE)
return(s_distr_slattice)
}
slattice_estimates <- slattice_estimation(af_df_cleaned, vector_with_generations, ne_estimates, length(vector_with_generations))
hist(slattice_estimates, breaks=50)
hist(slattice_estimates, breaks=200)
###plot stuff
par(mfrow=c(4,1))
h4 <- hist(wfabc_estimates, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
h2 <- hist(lls_estimates, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
h1 <- hist(clear_estimation$s, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
h3 <- hist(slattice_estimates, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
df <- data.frame(tool=c(rep("wfabc", times=length(wfabc_estimates)),
rep("lls", times=length(lls_estimates)),
rep("clear", times=length(clear_estimation$s)),
rep("slattice", times=length(slattice_estimates))),
selection_coeff=c(wfabc_estimates, lls_estimates, clear_estimation$s, slattice_estimates))
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.1,0.1))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
h4 <- hist(wfabc_estimates, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
h2 <- hist(lls_estimates, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
h1 <- hist(clear_estimation$s, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
h3 <- hist(slattice_estimates, density = 100, freq = TRUE, xlim = c(-0.5, 0.5), breaks = 100)
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.1,0.1))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.05,0.05))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.01,0.02))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.005,0.01))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
save.image("~/sweden/master_thesis/stelkens/week2/plots_real_data/ciarian/NaCl/Rdata.RData")
all_vectors <- data.frame(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
distances <- cor(all_vectors, use = "complete.obs")
distances <- round(distances, 3)
#distances <- sapply(all_hists, function(x) sapply(all_hists, function(y)cor.test(x,y,1)))
#distances <- round(distances/num_of_alleles, 3)
colnames(distances) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(distances) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4)
#plot corr
par(mfrow=c(1,1))
all_vectors <- data.frame(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
distances <- cor(all_vectors, use = "complete.obs")
distances <- round(distances, 3)
#distances <- sapply(all_hists, function(x) sapply(all_hists, function(y)cor.test(x,y,1)))
#distances <- round(distances/num_of_alleles, 3)
colnames(distances) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(distances) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4)
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.005,0.01))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
?corrplot
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = TRUE)
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = TRUE)
#calculate overlaps
calculate_overlap <- function(your_distr_1, your_distr_2){
a <- your_distr_1
b <- your_distr_2
# define limits of a common grid, adding a buffer so that tails aren't cut off
lower <- min(c(a, b)) - 1
upper <- max(c(a, b)) + 1
# generate kernel densities
da <- density(a, from=lower, to=upper)
db <- density(b, from=lower, to=upper)
d <- data.frame(x=da$x, a=da$y, b=db$y)
# calculate intersection densities
d$w <- pmin(d$a, d$b)
# integrate areas under curves
total <- integrate.xy(d$x, d$a) + integrate.xy(d$x, d$b)
intersection <- integrate.xy(d$x, d$w)
# compute overlap coefficient
overlap <- 2 * intersection / total
return(overlap)
}
all_vectors <- list(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
overlaps <- sapply(all_vectors, function(x) sapply(all_vectors, function(y) calculate_overlap(x,y)))
colnames(overlaps) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(overlaps) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
?corrplot
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE, tl.col = 'white')
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "white", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
?corrplot
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE, number.font = 1)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 4, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 3, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 2, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 4,
number.font = 1, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 1, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.005,0.01))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
all_vectors <- list(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
View(all_vectors)
overlaps <- sapply(all_vectors, function(x) sapply(all_vectors, function(y) calculate_overlap(x,y)))
calculate_overlap(wfabc_estimates,lls_estimates)
lls_estimates
calculate_overlap <- function(your_distr_1, your_distr_2){
a <- your_distr_1
b <- your_distr_2
# define limits of a common grid, adding a buffer so that tails aren't cut off
lower <- min(c(a, b))
upper <- max(c(a, b))
# generate kernel densities
da <- density(a, from=lower, to=upper)
db <- density(b, from=lower, to=upper)
d <- data.frame(x=da$x, a=da$y, b=db$y)
# calculate intersection densities
d$w <- pmin(d$a, d$b)
# integrate areas under curves
total <- integrate.xy(d$x, d$a) + integrate.xy(d$x, d$b)
intersection <- integrate.xy(d$x, d$w)
# compute overlap coefficient
overlap <- 2 * intersection / total
return(overlap)
}
calculate_overlap(wfabc_estimates,lls_estimates)
all_vectors <- list(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
overlaps <- sapply(all_vectors, function(x) sapply(all_vectors, function(y) calculate_overlap(x,y)))
colnames(overlaps) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(overlaps) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.005,0.01))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
par(mfrow=c(1,1))
all_vectors <- data.frame(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
distances <- cor(all_vectors, use = "complete.obs")
distances <- round(distances, 3)
#distances <- sapply(all_hists, function(x) sapply(all_hists, function(y)cor.test(x,y,1)))
#distances <- round(distances/num_of_alleles, 3)
colnames(distances) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(distances) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = TRUE)
#calculate overlaps
calculate_overlap <- function(your_distr_1, your_distr_2){
a <- your_distr_1
b <- your_distr_2
# define limits of a common grid, adding a buffer so that tails aren't cut off
lower <- min(c(a, b))
upper <- max(c(a, b))
# generate kernel densities
da <- density(a, from=lower, to=upper)
db <- density(b, from=lower, to=upper)
d <- data.frame(x=da$x, a=da$y, b=db$y)
# calculate intersection densities
d$w <- pmin(d$a, d$b)
# integrate areas under curves
total <- integrate.xy(d$x, d$a) + integrate.xy(d$x, d$b)
intersection <- integrate.xy(d$x, d$w)
# compute overlap coefficient
overlap <- 2 * intersection / total
return(overlap)
}
all_vectors <- list(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
overlaps <- sapply(all_vectors, function(x) sapply(all_vectors, function(y) calculate_overlap(x,y)))
colnames(overlaps) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(overlaps) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE)
hist(slattice, break=50)
hist(slattice, breaks=50)
hist(slattice_estimates, breaks=50)
ggplot(df, aes(x = selection_coeff, y = tool, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.1, alpha = 0.5) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C")+
coord_cartesian(xlim = c(-0.005,0.01))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 7))+theme_bw()+
labs(x = "selection coefficient", y = "", title = '')+geom_density_ridges_gradient(scale = 1.5, rel_min_height = 0.01)+
theme(legend.position="none",
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 22), axis.title.x = element_text(size = 22),
axis.text.y = element_text(size = 22), axis.title.y = element_text(size = 22),
plot.title = element_text(size = 22, color = "black"))
par(mfrow=c(1,1))
all_vectors <- data.frame(clear_estimates,lls_estimates,slattice_estimates,wfabc_estimates)
distances <- cor(all_vectors, use = "complete.obs")
distances <- round(distances, 3)
#distances <- sapply(all_hists, function(x) sapply(all_hists, function(y)cor.test(x,y,1)))
#distances <- round(distances/num_of_alleles, 3)
colnames(distances) <- paste('', c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
rownames(distances) <- paste("", c("CLEAR", "LLS", "slattice", "WFABC"), sep=" ")
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = TRUE)
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = TRUE, addCoefasPercent = TRUE)
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = TRUE)
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col = TRUE, addCoef.col="white")
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col="white")
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col="grey")
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50, pch.col = 'red',
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4, addCoef.col="red")
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
?corrplot
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'circle', tl.srt = 45, bg = 'white',
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
min(distances)
max(distances)
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
View(distances)
sort(distances,partial=length(distances)-1)[length(distances)-1]
sort(distances,partial=length(distances)-1)[length(distances)-2]
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.lim=c(min(distances),sort(distances,partial=length(distances)-1)[length(distances)-2]),
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
sort(distances,partial=length(distances)-1)[length(distances)-2]
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white',
cl.lim=c(min(distances),0.1+sort(distances,partial=length(distances)-1)[length(distances)-2]),
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
?corrplot
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5, cl.length = 6,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 3, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 2.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.4,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.5,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.8,
addCoef.col = 'red')
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.7,
addCoef.col = 'red')
corrplot(overlaps, type = "lower", order = "hclust", is.corr = FALSE,
tl.col = "black", method = 'color', tl.srt = 45,cl.lim=c(min(overlaps),max(overlaps)),
cl.cex = 1.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.7,
addCoef.col = 'red')
View(overlaps)
save.image("~/sweden/master_thesis/stelkens/week2/plots_real_data/ciarian/NaCl/Rdata.RData")
corrplot(distances, type = "lower", order = "hclust",
tl.col = "black", method = 'color', tl.srt = 45, bg = 'white', cl.lim=c(min(distances),max(distances)),
cl.cex = 1.5, cl.offset = 2.7, number.cex = 2.5, cl.length = 4,
number.font = 5, pch.cex = 50,
cl.ratio = 0.30, diag = FALSE, tl.cex = 1.7,
addCoef.col = 'red')
save.image("~/sweden/master_thesis/stelkens/week2/plots_real_data/ciarian/NaCl/Rdata.RData")
